#########################################################
# Akka akka-kryo-serializer Reference Config File #
#########################################################

# This is the reference config file that contains all the default settings.
# Make your edits/overrides in your application.conf.

akka {
    actor {
		kryo  {

			# Whether Kryo should support object graph serialization
			# true: Kryo supports serialization of object graphs with shared nodes
            # and cyclic references, but this comes at the expense of a small overhead
            # false: Kryo does not support object grpahs with shared nodes, but is usually faster
			reference-enabled = true

			# Whether Kryo should support implicit class registration
            # true: Kryo supports implicit class registration. Class can be serialized and deserialized
            # without pre-registration but with lower efficiency.
            # false: Kryo does not support implicit class registration. It will throw an exception when
            # an unregistered class needs to be serialized or deserialized.
			implicit-registration-enabled = true

			# Log implicitly registered classes. Useful, if you want to know all classes
			# which are serialized
			implicit-registration-logging = false

			# Define a default size for byte buffers used during serialization   
			buffer-size = 4096

			# Define max size for byte buffers used during serialization
			# 1073741824 == 1G
			max-buffer-size = 1073741824
			
			# Define a default size for serializer pool
			serializer-pool-size = 16
			  
			# If enabled, Kryo logs a lot of information about serialization process.
			# Useful for debugging and lowl-level tweaking
			kryo-trace = false
			
			# If enabled, Kryo uses internally a map detecting shared nodes.
			# This is a preferred mode for big object graphs with a lot of nodes.
			# For small object graphs (e.g. below 10 nodes) set it to false for 
			# better performance. 
			kryo-reference-map = true
			
			# Define mappings from a fully qualified class name to a numeric id.  
			# Smaller ids lead to smaller sizes of serialized representations.
			# The smallest possible id should start at 9 (or even higher), because
			# ids below it are used by Kryo internally.
			# This section is optional.
			mappings {
				# fully.qualified.classname1 = id1
				# fully.qualified.classname2 = id2
			}

			# Define a set of fully qualified class names for   
			# classes to be used for serialization.  
			# The ids for those classes will be assigned automatically,
			# but respecting the order of declaration in this section.
			# This section is optional.
			classes = [
				# fully.qualified.classname1
				# fully.qualified.classname2			
			]  
		}
	}
}
